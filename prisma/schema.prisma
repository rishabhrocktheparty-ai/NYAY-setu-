generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Citizen {
  id                Int              @id @default(autoincrement())
  name              String?
  email             String?          @unique
  phone             String?          @unique
  preferredLanguage String?
  otp               String?
  otpExpiresAt      DateTime?
  role              String           @default("citizen")
  createdAt         DateTime         @default(now())
  cases             Case[]           @relation("CitizenCases")
  evidences         Evidence[]
  notebooks         NotebookEntry[]
  podcasts          Podcast[]
}

model Case {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  citizenId   Int
  status      String    @default("open")
  eCourtsId   String?
  assignedTo  Int?
  createdAt   DateTime  @default(now())
  citizen     Citizen   @relation("CitizenCases", fields: [citizenId], references: [id])
  evidences   Evidence[]
  analyses    Analysis[]
}

model Evidence {
  id         Int      @id @default(autoincrement())
  caseId     Int
  citizenId  Int
  type       String   // pdf | image | audio | video
  storageUrl String
  hash       String
  ocrText    String?
  uploadedAt DateTime @default(now())
  case       Case     @relation(fields: [caseId], references: [id])
  citizen    Citizen  @relation(fields: [citizenId], references: [id])
}

model Analysis {
  id              Int      @id @default(autoincrement())
  caseId          Int
  score           Int
  category        String
  reasons         Json?
  recommendations String?
  runAt           DateTime @default(now())
  case            Case     @relation(fields: [caseId], references: [id])
}

model NotebookEntry {
  id        Int      @id @default(autoincrement())
  caseId    Int
  userId    Int
  question  String
  response  String
  audioUrl  String?
  createdAt DateTime @default(now())
  case      Case     @relation(fields: [caseId], references: [id])
}

model Podcast {
  id          Int      @id @default(autoincrement())
  caseId      Int
  audioUrl    String
  summary     String
  generatedAt DateTime @default(now())
  case        Case     @relation(fields: [caseId], references: [id])
}